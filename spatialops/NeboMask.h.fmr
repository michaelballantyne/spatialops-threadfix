#lang fulmar

"/*
 * Copyright (c) 2014 The University of Utah
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the \"Software\"), to
 * deal in the Software without restriction, including without limitation the
 * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or
 * sell copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
 * IN THE SOFTWARE.
 */
"

(require "FulmarAbbreviations.fmr")
(require "NeboCore.fmr")
(require "NeboRhsCore.fmr")

(define SpatialMask (scope 'structured (tpl-use 'SpatialMask FT-chunk)))

(pp-header-file
 'NEBO_MASK_H
 (n 'SpatialOps
    (build-struct 'NeboMask
                  std-FT
                  null
                  null
                  (bs-Initial-rhs null
                                  null
                                  (bm-constructor (adcr SpatialMask 'm)
                                                  (cons-asgn 'mask_ 'm)
                                                  null)
                                  (n+ (mfc 'mask_ 'get_valid_ghost_data)
                                      (fc 'point_to_ghost (mfc (mfc 'mask_ 'boundary_info) 'has_extra)))
                                  (fc 'resize_ghost_and_shift_window
                                      'mask_
                                      'minus
                                      (n- 'plus
                                          (mfc (mfc 'mask_ 'boundary_info) 'has_extra))
                                      'shift)
                                  (fc 'resize_ghost
                                      'mask_
                                      'minus
                                      (n- 'plus
                                          (mfc (mfc 'mask_ 'boundary_info) 'has_extra)))
                                  (mfc 'mask_ 'find_consumer 'LOCAL_RAM "0")
                                  (mfc 'mask_ 'find_consumer 'EXTERNAL_CUDA_GPU DI-chunk)
                                  (list DI-chunk
                                        (fc 'resize_ghost_and_shift_window
                                            'mask_
                                            'minus
                                            (n- 'plus
                                                (mfc (mfc 'mask_ 'boundary_info) 'has_extra))
                                            'shift))
                                  (c (fc (tpl-use 'const_cast (ptr SpatialMask))
                                         (take-ptr 'mask_))
                                     '->
                                     (fc 'add_consumer 'EXTERNAL_CUDA_GPU DI-chunk))
                                  (fc 'resize_ghost_and_shift_window
                                      'mask_
                                      'minus
                                      (n- 'plus
                                          (mfc (mfc 'mask_ 'boundary_info) 'has_extra))
                                      'shift)
                                  null
                                  (sadc SpatialMask 'mask_))
                  (bs-Resize-rhs null
                                 null
                                 (bm-constructor (adcr SpatialMask 'm)
                                                 (cons-asgn 'mask_ 'm)
                                                 null)
                                 (fc 'shift_window
                                     (fc (tpl-use (scope 'structured 'SpatialMask)
                                                  FT-chunk)
                                         (mfc (mfc 'mask_ 'window_with_ghost)
                                              'refine
                                              'split
                                              'location)
                                         'mask_)
                                     'shift)
                                 null
                                 (sadc SpatialMask 'mask_))
                  (bs-SeqWalk-rhs null
                                  (bm-constructor (adcr SpatialMask 'm)
                                                  (cons-asgn 'mask_ 'm)
                                                  null)
                                  vt-chunk
                                  (fc 'mask_ index-arg)
                                  null
                                  (sadc SpatialMask 'mask_))
                  (bs-gpu-rhs null
                              (bm-constructor
                               (list (adc 'int DI-chunk)
                                     (adcr SpatialMask 'm))
                               (list (cons-asgn 'bitField_ (mfc 'm 'mask_values 'EXTERNAL_CUDA_GPU DI-chunk))
                                     (cons-asgn 'offset_ (n+ (mfc (mfc 'm 'window_with_ghost)
                                                                  'offset
                                                                  "0")
                                                             (n* (mfc (mfc 'm 'window_with_ghost)
                                                                      'glob_dim
                                                                      "0")
                                                                 (par (n+ (mfc (mfc 'm 'window_with_ghost)
                                                                               'offset
                                                                               "1")
                                                                          (par (n* (mfc (mfc 'm 'window_with_ghost)
                                                                                        'glob_dim
                                                                                        "1")
                                                                                   (mfc (mfc 'm 'window_with_ghost)
                                                                                        'offset
                                                                                        "2"))))))))
                                     (cons-asgn 'bitPosition_ "0")
                                     (cons-asgn 'blockPosition_ "0")
                                     (cons-asgn 'xLength_ (mfc (mfc 'm 'window_with_ghost)
                                                               'glob_dim
                                                               "0"))
                                     (cons-asgn 'step_ (n* 'xLength_ (mfc (mfc 'm 'window_with_ghost)
                                                                          'glob_dim
                                                                          "1"))))
                               null)
                              (list (n= 'bitPosition_ (n+ 'offset_ (n+ 'x (n* 'y 'xLength_))))
                                    (fc 'update_positions))
                              (list (n+= 'bitPosition_ 'step_)
                                    (fc 'update_positions))
                              'bool
                              (n-not (n-not (c '* (bs (p (n+ 'bitField_ 'blockPosition_))
                                                      '&
                                                      (p (bs "1" '<< 'bitPosition_))))))
                              null
                              (list (device-use (v-fcn-def 'update_positions
                                                           null
                                                           (nif (n-or (n< 'bitPosition_ "0")
                                                                      (n>= 'bitPosition_ 'NEBO_INT_BIT))
                                                                (nt=c 'int
                                                                      'flatPosition
                                                                      (n+ (n* 'blockPosition_ 'NEBO_INT_BIT)
                                                                          'bitPosition_))
                                                                (n= 'blockPosition_ (n/ 'flatPosition 'NEBO_INT_BIT))
                                                                (n= 'bitPosition_ (n% 'flatPosition 'NEBO_INT_BIT)))))
                                    (sadcp (bs 'unsigned 'int) 'bitField_)
                                    (sadc 'int 'offset_)
                                    (sad 'int 'bitPosition_)
                                    (sad 'int 'blockPosition_)
                                    (sadc 'int 'xLength_)
                                    (sadc 'int 'step_)))
                  (bs-Reduction null
                                (bm-constructor (adcr SpatialMask 'm)
                                                (list (cons-asgn 'iter_ (mfc 'm 'begin))
                                                      (cons-asgn 'end_ (mfc 'm 'end)))
                                                null)
                                (n++ 'iter_)
                                (n== 'iter_ 'end_)
                                'true
                                vt-chunk
                                (l '* 'iter_)
                                null
                                (list (sad (tpl-pmtr (scope SpatialMask 'const_iterator))
                                           'iter_)
                                      (sadc (tpl-pmtr (scope SpatialMask 'const_iterator))
                                            'end_)))))
 )
