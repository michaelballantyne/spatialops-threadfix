#lang fulmar

"/*
 * Copyright (c) 2014 The University of Utah
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the \"Software\"), to
 * deal in the Software without restriction, including without limitation the
 * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or
 * sell copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
 * IN THE SOFTWARE.
 */
"

(require "FulmarAbbreviations.fmr")
(require "NeboCore.fmr")
(require "NeboRhsCore.fmr")

(pp-header-file
 'NEBO_RHS_H
 (SpatialOps-namespace
  (build-struct NS-chunk
                scalar-FT
                null
                null
                (bs-Initial-rhs (stmt-typedef AT-chunk vt-chunk)
                                null
                                (bm-constructor (function-pmtr (const vt-chunk) 'v)
                                                (val-construct 'value_ 'v)
                                                null)
                                (val-call GhostData 'GHOST_MAX)
                                (val-call GhostData 'GHOST_MAX)
                                'false
                                null
                                0
                                'value_
                                'value_
                                'true
                                'true
                                'value_
                                null
                                null
                                (stmt-dcl-variable (const vt-chunk) 'value_))
                (bs-Resize-rhs (stmt-typedef AT-chunk vt-chunk)
                               null
                               (bm-constructor (function-pmtr (const vt-chunk) 'value)
                                               (val-construct 'value_ 'value)
                                               null)
                               'value_
                               null
                               (stmt-dcl-variable (const vt-chunk) 'value_))
                (bs-SeqWalk-rhs null
                                (bm-constructor (function-pmtr (const vt-chunk) 'value)
                                                (val-construct 'value_ 'value)
                                                null)
                                vt-chunk
                                'value_
                                null
                                (stmt-dcl-variable (const vt-chunk) 'value_))
                (bs-gpu-rhs null
                            (bm-constructor (function-pmtr (const vt-chunk) 'value)
                                            (val-construct 'value_ 'value)
                                            null)
                            vt-chunk
                            'value_
                            null
                            (stmt-dcl-variable (const vt-chunk) 'value_)))

  (build-struct NCF-chunk
                std-FT
                null
                null
                (bs-Initial-rhs null
                                null
                                (bm-constructor (function-pmtr (ref (const FT-chunk)) 'f)
                                                (val-construct 'field_ 'f)
                                                null)
                                (val-add (val-member-call 'field_ 'get_valid_ghost_data)
                                         (val-call 'point_to_ghost (val-member-call (val-member-call 'field_ 'boundary_info) 'has_extra)))
                                (val-call 'point_to_ghost (val-member-call (val-member-call 'field_ 'boundary_info) 'has_extra))
                                'true
                                null
                                (val-subtract (val-subtract (val-subtract (val-member-call (val-member-call 'field_ 'window_with_ghost) 'extent 'dir)
                                                                          (val-member-call (val-member-call 'field_ 'boundary_info) 'has_extra 'dir))
                                                            (val-member-call (val-member-call 'field_ 'get_valid_ghost_data) 'get_minus 'dir))
                                              (val-member-call (val-member-call 'field_ 'get_valid_ghost_data) 'get_plus 'dir))
                                'field_
                                'field_
                                (val-member-call 'field_ 'is_valid 'CPU_INDEX)
                                (val-member-call 'field_ 'is_valid DI-chunk)
                                (list DI-chunk 'field_)
                                (concat (val-call (type-template 'const_cast (ptr FT-chunk))
                                                  (take-ptr 'field_))
                                        '->
                                        (val-call 'add_field_loc DI-chunk))
                                null
                                (stmt-dcl-variable (const FT-chunk) 'field_))
                (bs-Resize-rhs null
                               null
                               (bm-constructor (function-pmtr (ref (const FT-chunk)) 'f)
                                               (val-construct 'field_ 'f)
                                               null)
                               'field_
                               null
                               (stmt-dcl-variable (const FT-chunk) 'field_))
                (bs-SeqWalk-rhs null
                                (bm-constructor (function-pmtr (ref (const FT-chunk)) 'f)
                                                (list (val-construct 'xGlob_ (val-member-call (val-member-call 'f 'window_with_ghost)
                                                                                              'glob_dim
                                                                                              0))
                                                      (val-construct 'yGlob_ (val-member-call (val-member-call 'f 'window_with_ghost)
                                                                                              'glob_dim
                                                                                              1))
                                                      (val-construct 'base_ (compute-base 'f 'none)))
                                                null)
                                vt-chunk
                                (array-access 'base_ (val-add 'x (val-multiply 'xGlob_ (paren (val-add 'y (paren (val-multiply 'yGlob_ 'z)))))))
                                null
                                (list (stmt-dcl-variable (const 'int) 'xGlob_)
                                      (stmt-dcl-variable (const 'int) 'yGlob_)
                                      (stmt-dcl-variable (ptr (const vt-chunk)) 'base_)))
                (bs-gpu-rhs null
                            (bm-constructor
                             (list (function-pmtr (const 'int) DI-chunk)
                                   (function-pmtr (ref (const FT-chunk)) 'f))
                             (list (val-construct 'base_ (compute-base 'f DI-chunk))
                                   (val-construct 'xGlob_ (val-member-call (val-member-call 'f
                                                                                            'window_with_ghost)
                                                                           'glob_dim
                                                                           0))
                                   (val-construct 'yGlob_ (val-member-call (val-member-call 'f
                                                                                            'window_with_ghost)
                                                                           'glob_dim
                                                                           1)))
                             null)
                            vt-chunk
                            (array-access 'base_ (val-add 'x (val-multiply 'xGlob_ (paren (val-add 'y (paren (val-multiply 'yGlob_ 'z)))))))
                            null
                            (list (stmt-dcl-variable (ptr (const vt-chunk)) 'base_)
                                  (stmt-dcl-variable (const 'int) 'xGlob_)
                                  (stmt-dcl-variable (const 'int) 'yGlob_))))

  (build-struct NCSVF-chunk
                SV-FT
                null
                null
                (bs-Initial-rhs (stmt-typedef SVFT-def-chunk SVFT-chunk)
                                null
                                (bm-constructor (function-pmtr (ref (const SVFT-chunk)) 'f)
                                                (val-construct 'field_ 'f)
                                                null)
                                (val-call GhostData 'GHOST_MAX)
                                (val-call GhostData 'GHOST_MAX)
                                'false
                                null
                                0
                                (add-spaces '* (val-member-call 'field_ 'field_values 'CPU_INDEX))
                                (add-spaces '* (val-member-call 'field_ 'field_values 'CPU_INDEX))
                                (val-member-call 'field_ 'is_valid 'CPU_INDEX)
                                (val-member-call 'field_ 'is_valid  DI-chunk)
                                (list DI-chunk 'field_)
                                (concat (val-call (type-template 'const_cast (ptr SVFT-chunk))
                                                  (take-ptr 'field_))
                                        '->
                                        (val-call 'add_field_loc DI-chunk))
                                null
                                (stmt-dcl-variable (const SVFT-chunk) 'field_))
                (bs-Resize-rhs null
                               null
                               (bm-constructor (function-pmtr (ref (const 'double)) 'v)
                                               (val-construct 'value_ 'v)
                                               null)
                               'value_
                               null
                               (stmt-dcl-variable (const 'double) 'value_))
                (bs-SeqWalk-rhs null
                                (bm-constructor (function-pmtr (ref (const 'double)) 'v)
                                                (val-construct 'value_ 'v)
                                                null)
                                vt-chunk
                                'value_
                                null
                                (stmt-dcl-variable 'double 'value_))
                (bs-gpu-rhs (stmt-typedef SVFT-def-chunk SVFT-chunk)
                            (bm-constructor (list (function-pmtr (const 'int) DI-chunk)
                                                  (function-pmtr (ref (const SVFT-chunk)) 'f))
                                            (val-construct 'pointer_ (val-member-call 'f 'field_values DI-chunk))
                                            null)
                            vt-chunk
                            (concat '* 'pointer_)
                            null
                            (stmt-dcl-variable (ptr (const vt-chunk)) 'pointer_)))
  ))
